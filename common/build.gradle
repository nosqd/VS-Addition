architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/vs_addition.accesswidener")
}
String gitRevision = "git rev-parse HEAD".execute().text.trim()
version = minecraft_version + "-" + String.valueOf(loader_platform).toLowerCase() + "-" + mod_version + "+" + gitRevision.substring(0, 10)

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"

    // Architectury API
    modApi "dev.architectury:architectury:${rootProject.architectury_version}"

    //Mixin Extras
    implementation(annotationProcessor("io.github.llamalad7:mixinextras-common:${rootProject.mixin_extras}"))

    //Mixin Squared
    implementation(annotationProcessor("com.github.bawnorton.mixinsquared:mixinsquared-common:${rootProject.mixin_squared}"))

    // Valkyrien Skies 2
    modApi files("jars/valkyrienskies-120-2.3.0-beta.5+a9348063d0.jar")

    // VS Core
    compileOnly("org.valkyrienskies.core:api:${rootProject.vs_core_version}")
    compileOnly("org.valkyrienskies.core:api-game:${rootProject.vs_core_version}")
    compileOnly("org.valkyrienskies.core:util:${rootProject.vs_core_version}")
    compileOnly("org.valkyrienskies.core:impl:${rootProject.vs_core_version}")

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.9.10"
    api "org.jetbrains.kotlin:kotlin-reflect:1.9.10"

    //Common create compats,
    //We just use a version from a platform and hope the classes exist on both versions and mixins apply correctly
    modCompileOnly("com.simibubi.create:create-fabric-${minecraft_version}:${create_fabric_version}")
            { exclude group: 'com.github.AlphaMode', module: 'fakeconfigtoml' }
    modCompileOnly("net.fabricmc.fabric-api:fabric-api:${fabric_api_version}")
    modCompileOnly("com.jozufozu.flywheel:flywheel-fabric-${minecraft_version}:${flywheel_version_fabric}")

    // CBC
    // Change the previous section
    modImplementation("com.rbasamoyai:ritchiesprojectilelib:1.0.0-369e88d+1.20.1-common") { transitive = false }
    modImplementation files("jars/createbigcannons-5.5.0-dev+mc.1.20.1-fabric-build.50.jar")

    //ComputerCraft
    modCompileOnly("maven.modrinth:cc-tweaked:1.111.0")

    //Eureka
    modCompileOnly("maven.modrinth:eureka:1.20.1-fabric-1.5.0-beta.3")

    //Clockwork
    modCompileOnly("maven.modrinth:create-clockwork:EvNWNIMY")

    //Copycat+
    modCompileOnly("maven.modrinth:copycats:2.0.4+mc.1.20.1-fabric")

    //CC&A
    modImplementation("maven.modrinth:createaddition:vV4bZmhm")

    //Xaero's minimap
    modCompileOnly("maven.modrinth:xaeros-minimap:24.1.1_Fabric_1.20")

    //JourneyMap
    modCompileOnly("maven.modrinth:journeymap:1.20.1-5.10.0-fabric")

    //FTB Chunks
    modCompileOnly files("jars/ftb-chunks-fabric-2001.3.1.jar")

    //Kontraption
    modCompileOnly("maven.modrinth:kontraption:x3oh2lqe")

    //Unlimited Peripheral Works
    modCompileOnly("maven.modrinth:unlimitedperipheralworks:llME0vcm")
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            groupId = "org.valkyrienskies.eureka"
            version = project.version
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        if (project.vs_maven_username && project.vs_maven_password) {
            println "Publishing to VS Maven"
            maven {
                url = project.vs_maven_url
                credentials {
                    username = project.vs_maven_username
                    password = project.vs_maven_password
                }
            }
        }
        // Add repositories to publish to here.
        if (System.getenv("GITHUB_ACTOR") != null) {
            println "Publishing to Github Packages"
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/ValkyrienSkies/Eureka")
                credentials {
                    username = System.getenv("GITHUB_ACTOR")
                    password = System.getenv("GITHUB_TOKEN")
                }
            }
        }
    }
}